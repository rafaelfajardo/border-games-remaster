%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(r) 6.0%%For: (Rafael A. Fajardo) (University of Texas at El Paso)%%Title: (musician.eps)%%CreationDate: (2001.02.02) (1:23 PM)%%BoundingBox: 135 642 204 708%%HiResBoundingBox: 135.3333 642.6016 203.6079 707.443%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 2.0%AI3_ColorUsage: Color%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()%AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 14 22 598 782%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: 142 720 6 794 557 58 1 1 3 40%AI5_OpenViewLayers: 7%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 %%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 23 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			5 packedarray		} bind def		/setcustomcolor		{			exch aload pop pop			4			{				4 index mul 4 1 roll			} repeat			5 -1 roll pop			setcmykcolor		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 17 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin		/initialize	{ 		Adobe_ColorImage_AI6 begin		Adobe_ColorImage_AI6		{			dup type /arraytype eq			{				dup xcheck				{					bind				} if			} if			pop pop		} forall	} def	/terminate { end } def		currentdict /Adobe_ColorImage_AI6_Vars known not	{		/Adobe_ColorImage_AI6_Vars 14 dict def	} if		Adobe_ColorImage_AI6_Vars begin		/channelcount 0 def		/sourcecount 0 def		/sourcearray 4 array def		/plateindex -1 def		/XIMask 0 def		/XIBinary 0 def		/XIChannelCount 0 def		/XIBitsPerPixel 0 def		/XIImageHeight 0 def		/XIImageWidth 0 def		/XIImageMatrix null def		/XIBuffer null def		/XIDataProc null def end		/WalkRGBString null def	/WalkCMYKString null def		/StuffRGBIntoGrayString null def	/RGBToGrayImageProc null def	/StuffCMYKIntoGrayString null def	/CMYKToGrayImageProc null def	/ColorImageCompositeEmulator null def		/SeparateCMYKImageProc null def		/FourEqual null def	/TestPlateIndex null def		currentdict /_colorimage known not	{		/colorimage where		{			/colorimage get /_colorimage exch def		}		{			/_colorimage null def		} ifelse	} if		/_currenttransfer systemdict /currenttransfer get def		/colorimage null def	/XI null def			/WalkRGBString	{		0 3 index			dup length 1 sub 0 3 3 -1 roll		{			3 getinterval { } forall				5 index exec				3 index		} for				 5 { pop } repeat		} def			/WalkCMYKString	{		0 3 index			dup length 1 sub 0 4 3 -1 roll		{			4 getinterval { } forall						6 index exec						3 index					} for				5 { pop } repeat			} def			/StuffRGBIntoGrayString	{		.11 mul exch				.59 mul add exch				.3 mul add				cvi 3 copy put				pop 1 add	} def			/RGBToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin 			sourcearray 0 get exec			dup length 3 idiv string			dup 3 1 roll 						/StuffRGBIntoGrayString load exch			WalkRGBString	 end	} def			/StuffCMYKIntoGrayString	{		exch .11 mul add				exch .59 mul add				exch .3 mul add				dup 255 gt { pop 255 } if				255 exch sub cvi 3 copy put				pop 1 add	} def			/CMYKToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin			sourcearray 0 get exec			dup length 4 idiv string			dup 3 1 roll 						/StuffCMYKIntoGrayString load exch			WalkCMYKString	 end	} def			/ColorImageCompositeEmulator	{		pop true eq		{			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat		}		{			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne			{				Adobe_ColorImage_AI6_Vars begin					sourcearray 0 3 -1 roll put									channelcount 3 eq 					{ 						/RGBToGrayImageProc 					}					{ 						/CMYKToGrayImageProc					} ifelse					load			 end			} if			image		} ifelse	} def			/SeparateCMYKImageProc	{			Adobe_ColorImage_AI6_Vars begin				sourcecount 0 ne			{				sourcearray plateindex get exec			}			{							sourcearray 0 get exec								dup length 4 idiv string								0 2 index								plateindex 4 2 index length 1 sub				{					get 255 exch sub										3 copy put pop 1 add										2 index				} for					pop pop exch pop			} ifelse	 end	} def				/FourEqual	{		4 index ne		{			pop pop pop false		}		{			4 index ne			{				pop pop false			}			{				4 index ne				{					pop false				}				{					4 index eq				} ifelse			} ifelse		} ifelse	} def			/TestPlateIndex	{		Adobe_ColorImage_AI6_Vars begin			/plateindex -1 def				/setcmykcolor where			{				pop				gsave				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub				grestore					1 0 0 0 FourEqual 				{ 					/plateindex 0 def				}				{					0 1 0 0 FourEqual					{ 						/plateindex 1 def					}					{						0 0 1 0 FourEqual						{							/plateindex 2 def						}						{							0 0 0 1 FourEqual							{ 								/plateindex 3 def							}							{								0 0 0 0 FourEqual								{									/plateindex 5 def								} if							} ifelse						} ifelse					} ifelse				} ifelse				pop pop pop pop			} if			plateindex	 end	} def			/colorimage	{		Adobe_ColorImage_AI6_Vars begin			/channelcount 1 index def			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def				4 sourcecount add index dup 			8 eq exch 1 eq or not	 end				{			/_colorimage load null ne			{				_colorimage			}			{				Adobe_ColorImage_AI6_Vars /sourcecount get				7 add { pop } repeat			} ifelse		}		{			dup 3 eq			TestPlateIndex			dup -1 eq exch 5 eq or or			{				/_colorimage load null eq				{					ColorImageCompositeEmulator				}				{					dup 1 eq					{						pop pop image					}					{						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							gsave														0 _currenttransfer exec							1 _currenttransfer exec							eq							{ 0 _currenttransfer exec 0.5 lt }							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse														{ { pop 0 } } { { pop 1 } } ifelse							systemdict /settransfer get exec						} if												_colorimage												Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							grestore						} if					} ifelse				} ifelse			}			{				dup 1 eq				{					pop pop					image				}				{					pop pop						Adobe_ColorImage_AI6_Vars begin						sourcecount -1 0						{										exch sourcearray 3 1 roll put						} for							/SeparateCMYKImageProc load				 end						systemdict /image get exec				} ifelse			} ifelse		} ifelse	} def		/XI	{		Adobe_ColorImage_AI6_Vars begin			gsave			/XIMask exch 0 ne def			/XIBinary exch 0 ne def			pop			pop			/XIChannelCount exch def			/XIBitsPerPixel exch def			/XIImageHeight exch def			/XIImageWidth exch def			pop pop pop pop			/XIImageMatrix exch def						XIBitsPerPixel 1 eq			{				XIImageWidth 8 div ceiling cvi			}			{				XIImageWidth XIChannelCount mul			} ifelse			/XIBuffer exch string def						XIBinary			{				/XIDataProc { currentfile XIBuffer readstring pop } def				currentfile 128 string readline pop pop			}			{				/XIDataProc { currentfile XIBuffer readhexstring pop } def			} ifelse						0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale						XIMask			{				XIImageWidth XIImageHeight				false				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								/_lp /null ddef				_fc				/_lp /imagemask ddef								imagemask			}			{				XIImageWidth XIImageHeight				XIBitsPerPixel				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								XIChannelCount 1 eq				{										gsave					0 setgray										image										grestore				}				{					false					XIChannelCount					colorimage				} ifelse			} ifelse			grestore	 end	} def	end%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 %%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetupAdobe_level2_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp8 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Green & Blue)(Green & Blue) 0 2 Bd[<99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152535354555656575859595A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br[1 0.75 0 0 1 50 100 %_Bs0.6 0 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink, Yellow, Green)(Pink, Yellow, Green) 0 3 Bd[<0000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010202020202020202020202020202020202020202020203030303030303030303030303030303030303030304040404040404040404040404040404040404040505050505050505050505050505050505050506060606060606060606060606060606060606070707070707070707070707070707070707080808080808080808080808080808080809090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D><050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F101011111212131314141515161717181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F606162636364656666676869696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F8081828383848586878788898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8A9AAABACADADAEAFB0B1B2B2><CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A59585756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A39383837363534333231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A19181817171616151414131312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202020201010101010000000000><00000000000000000000000001010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404050505050505050505050505050505050505050505050505050505050505050505050505050505050505><BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC>01 %_Br[0.05 0.7 0 0 1 50 100 %_Bs0 0.02 0.8 0 1 57 36 %_Bs0.45 0 0.75 0 1 37 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple, Red & Yellow)(Purple, Red & Yellow) 0 3 Bd[0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A><CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFF>01 %_Br<E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF><00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F40414243444545464748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC>01 %_Br[0 0.04 1 0 1 50 100 %_Bs0 1 0.8 0 1 50 50 %_Bs0.9 0.9 0 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_Bs1 1 0 0 1 50 80 %_Bs1 0.0279 0 0 1 50 60 %_Bs1 0 1 0 1 50 40 %_Bs0 0 1 0 1 50 20 %_Bs0 1 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Steel Bar)(Steel Bar) 0 3 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 %_Br[0 0 50 100 %_Bs1 0 50 70 %_Bs0 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5>01 %_Br[0 0 1 0 1 52 19 %_Bs0 0.55 0.9 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Purple Radial)(Yellow & Purple Radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_Bs1 1 0 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette72 82 PbPnPc1 gPc0 gPc0 0 0 0 kPc0.75 gPc0.5 gPc0.25 gPc0 gPcBb2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0 0 0 kPc0.5 0 0 0 kPc0.75 0 0 0 kPc1 0 0 0 kPc0.25 0.25 0 0 kPc0.5 0.5 0 0 kPc0.75 0.75 0 0 kPc1 1 0 0 kPcBb2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0 0 kPc0 0.5 0 0 kPc0 0.75 0 0 kPc0 1 0 0 kPc0 0.25 0.25 0 kPc0 0.5 0.5 0 kPc0 0.75 0.75 0 kPc0 1 1 0 kPcBb0 0 0 0 Bh2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0 0.25 0 kPc0 0 0.5 0 kPc0 0 0.75 0 kPc0 0 1 0 kPc0.25 0 0.25 0 kPc0.5 0 0.5 0 kPc0.75 0 0.75 0 kPc1 0 1 0 kPcBb2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0 0 kPc0.5 0.25 0 0 kPc0.75 0.375 0 0 kPc1 0.5 0 0 kPc0.125 0.25 0 0 kPc0.25 0.5 0 0 kPc0.375 0.75 0 0 kPc0.5 1 0 0 kPcBb2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0.125 0 kPc0 0.5 0.25 0 kPc0 0.75 0.375 0 kPc0 1 0.5 0 kPc0 0.125 0.25 0 kPc0 0.25 0.5 0 kPc0 0.375 0.75 0 kPc0 0.5 1 0 kPcBb2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0 0.25 0 kPc0.25 0 0.5 0 kPc0.375 0 0.75 0 kPc0.5 0 1 0 kPc0.25 0 0.125 0 kPc0.5 0 0.25 0 kPc0.75 0 0.375 0 kPc1 0 0.5 0 kPcBb2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0.125 0 kPc0.5 0.25 0.25 0 kPc0.75 0.375 0.375 0 kPc1 0.5 0.5 0 kPc0.25 0.25 0.125 0 kPc0.5 0.5 0.25 0 kPc0.75 0.75 0.375 0 kPc1 1 0.5 0 kPcBb0 0 0 0 Bh2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0.25 0.125 0 kPc0.25 0.5 0.25 0 kPc0.375 0.75 0.375 0 kPc0.5 1 0.5 0 kPc0.125 0.25 0.25 0 kPc0.25 0.5 0.5 0 kPc0.375 0.75 0.75 0 kPc0.5 1 1 0 kPc0 0 0 0 kPc0.125 0.125 0.25 0 kPc0.25 0.25 0.5 0 kPc0.375 0.375 0.75 0 kPc0.5 0.5 1 0 kPc0.25 0.125 0.25 0 kPc0.5 0.25 0.5 0 kPc0.75 0.375 0.75 0 kPc1 0.5 1 0 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au0 R0 G800 Ar0 J 0 j 0.25 w 4 M []0 d%AI3_Note:0 D0 XR187.8981 696.5277 m189.1793 699.605 190.5887 702.9899 193.8575 704.3369 c195.3189 704.8117 196.7935 704.0172 198.0501 703.1329 c198.5117 702.9407 198.1914 702.1714 198.2429 701.4279 c198.3584 700.8381 198.7559 700.4921 199.3714 700.2359 cS188.821 697.2267 m190.1022 700.3039 191.5115 703.6889 194.7804 705.0359 c196.2418 705.5106 197.7164 704.7162 198.973 703.8319 c199.4346 703.6397 199.1143 702.8704 199.1657 702.1268 c199.2813 701.5371 199.6788 701.1911 200.2943 700.9348 cS190.911 696.176 m192.1922 699.2532 193.6015 702.6382 196.8704 703.9852 c198.3318 704.4599 199.8064 703.6654 201.063 702.7812 c201.5246 702.589 201.2043 701.8197 201.2557 701.0761 cS190.2955 696.4322 m191.5768 699.5095 192.9861 702.8944 196.255 704.2414 c197.7164 704.7162 199.1909 703.9217 200.4476 703.0374 c200.9091 702.8452 200.5888 702.0759 200.6403 701.3323 c200.7559 700.7426 201.1534 700.3966 201.7688 700.1404 cS190.6033 696.3041 m191.8845 699.3813 193.2938 702.7663 196.5627 704.1133 c198.0241 704.588 199.4986 703.7936 200.7553 702.9093 c201.2169 702.7171 200.8965 701.9478 200.948 701.2042 c201.0636 700.6145 201.4611 700.2685 202.0765 700.0122 cS189.9878 696.5603 m191.269 699.6376 192.6784 703.0225 195.9472 704.3695 c197.4086 704.8443 198.8832 704.0498 200.1398 703.1655 c200.6014 702.9733 200.2811 702.204 200.3326 701.4605 c200.4481 700.8708 200.8457 700.5247 201.4611 700.2685 cS189.3723 696.8166 m190.6536 699.8938 192.0629 703.2788 195.3318 704.6258 c196.7932 705.1005 198.2677 704.3061 199.5244 703.4218 c199.986 703.2296 199.6656 702.4603 199.7171 701.7167 c199.8327 701.127 200.2302 700.781 200.8456 700.5247 cS187.4105 698.175 m188.6917 701.2523 190.101 704.6372 193.3699 705.9842 c194.8313 706.459 196.3059 705.6645 197.5625 704.7802 c198.0241 704.588 197.7038 703.8187 197.7552 703.0752 c197.8708 702.4855 198.2683 702.1394 198.8838 701.8832 cS187.526 697.5853 m188.8072 700.6626 190.2166 704.0475 193.4854 705.3945 c194.9468 705.8693 196.4214 705.0748 197.678 704.1905 c198.1396 703.9983 197.8193 703.229 197.8708 702.4855 c197.9863 701.8957 198.3839 701.5497 198.9993 701.2935 cS187.4236 696.9058 m188.7049 699.9831 190.1142 703.368 193.3831 704.715 c194.8444 705.1898 196.319 704.3953 197.5756 703.511 c198.0372 703.3188 197.7169 702.5495 197.7684 701.806 c197.884 701.2162 198.2815 700.8702 198.8969 700.614 cS191.5264 695.9197 m192.8076 698.997 194.217 702.3819 197.4858 703.7289 c198.9472 704.2037 200.4218 703.4092 201.6784 702.5249 c202.14 702.3327 201.8197 701.5634 201.8712 700.8199 cS189.7576 694.4898 m191.0388 697.567 192.4482 700.952 195.717 702.299 c197.1784 702.7737 198.653 701.9793 199.9096 701.095 c200.3712 700.9028 200.0509 700.1335 200.1024 699.3899 cS190.6805 695.1887 m191.9617 698.266 193.3711 701.6509 196.6399 702.998 c198.1013 703.4727 199.5759 702.6782 200.8325 701.7939 c201.2941 701.6017 200.9738 700.8324 201.0253 700.0889 cS192.7705 694.138 m194.0517 697.2153 195.4611 700.6002 198.7299 701.9472 c200.1913 702.422 201.6659 701.6275 202.9225 700.7432 cS192.1551 694.3943 m193.4363 697.4715 194.8456 700.8565 198.1145 702.2035 c199.5759 702.6782 201.0504 701.8837 202.3071 700.9995 cS192.4628 694.2661 m193.744 697.3434 195.1533 700.7283 198.4222 702.0753 c199.8836 702.5501 201.3582 701.7556 202.6148 700.8713 cS191.8473 694.5224 m193.1286 697.5996 194.5379 700.9846 197.8067 702.3316 c199.2681 702.8063 200.7427 702.0119 201.9993 701.1276 cS191.2319 694.7786 m192.5131 697.8559 193.9225 701.2408 197.1913 702.5878 c198.6527 703.0626 200.1273 702.2681 201.3839 701.3838 cS189.27 696.1371 m190.5512 699.2143 191.9606 702.5993 195.2294 703.9463 c196.6908 704.421 198.1654 703.6266 199.422 702.7423 c199.8836 702.5501 199.5633 701.7808 199.6148 701.0372 c199.7303 700.4475 200.1278 700.1015 200.7433 699.8452 cS189.3855 695.5474 m190.6668 698.6246 192.0761 702.8429 195.345 704.1899 c196.8063 704.6647 198.2809 703.0368 199.5375 702.1526 c199.9991 701.9604 199.6788 701.1911 199.7303 700.4475 cS189.2831 694.8679 m190.5644 697.9451 191.9737 701.3301 195.2426 702.6771 c196.704 703.1518 198.1785 702.3574 199.4352 701.4731 c199.8968 701.2809 199.5764 700.5116 199.6279 699.768 cS193.3859 693.8818 m194.6672 696.959 196.0765 700.344 199.3454 701.691 c200.8068 702.1657 202.2813 701.3713 203.5379 700.487 cS185.962 697.5144 m187.2432 700.5916 188.6525 703.9766 191.9214 705.3236 c193.3828 705.7984 194.8574 705.0039 196.114 704.1196 c196.5756 703.9274 196.2553 703.1581 196.3067 702.4145 c196.4223 701.8248 196.8198 701.4788 197.4353 701.2225 cS186.8848 698.2133 m188.1661 701.2906 189.5754 704.6755 192.8443 706.0226 c194.3057 706.4973 195.7802 705.7028 197.0369 704.8186 c197.4985 704.6264 197.1781 703.8571 197.2296 703.1135 c197.3452 702.5238 197.7427 702.1777 198.3581 701.9215 cS188.9748 697.1626 m190.2561 700.2399 190.4988 705.6248 194.9343 704.9718 c196.4544 704.7481 197.8702 704.6521 199.1269 703.7678 c199.5884 703.5756 199.2681 702.8063 199.3196 702.0628 c199.4352 701.473 199.8327 701.127 200.4481 700.8708 cS188.3594 697.4189 m189.6406 700.4961 191.05 703.8811 194.3188 705.2281 c195.7802 705.7028 197.2548 704.9084 198.5114 704.0241 c198.973 703.8319 198.6527 703.0626 198.7042 702.319 c198.8197 701.7293 199.2173 701.3833 199.8327 701.127 cS188.6671 697.2907 m189.9483 700.368 191.3577 703.7529 194.6265 705.1 c196.0879 705.5747 197.5625 704.7802 198.8191 703.8959 c199.2807 703.7038 198.9604 702.9345 199.0119 702.1909 c199.1274 701.6012 199.525 701.2551 200.1404 700.9989 cS188.0517 697.547 m189.3329 700.6242 190.0756 705.6759 194.0111 705.3562 c195.5426 705.2318 196.947 705.0365 198.2037 704.1522 c198.6653 703.96 198.345 703.1907 198.3964 702.4471 c198.512 701.8574 198.9095 701.5114 199.5249 701.2551 cS187.4362 697.8032 m188.7174 700.8805 188.7934 706.0988 193.3956 705.6125 c194.9237 705.451 196.3316 705.2927 197.5882 704.4084 c198.0498 704.2163 197.7295 703.447 197.781 702.7034 c197.8965 702.1137 198.2941 701.7676 198.9095 701.5114 cS185.4743 699.1617 m186.7556 702.2389 188.6092 704.8444 191.4338 706.9709 c192.7285 707.9456 194.3697 706.6512 195.6264 705.7669 c196.0879 705.5747 195.7676 704.8054 195.8191 704.0618 c195.9347 703.4721 196.3322 703.1261 196.9476 702.8698 cS185.5899 698.572 m187.7645 703.7951 187.387 704.666 191.5493 706.3812 c193.0107 706.8559 194.4853 706.0615 195.7419 705.1772 c196.2035 704.985 195.8832 704.2157 195.9346 703.4721 c196.0502 702.8824 196.4477 702.5364 197.0632 702.2801 cS185.4875 697.8925 m188.1277 704.2338 188.5414 706.4794 191.4469 705.7017 c192.9312 705.3044 194.3829 705.382 195.6395 704.4977 c196.1011 704.3055 195.7808 703.5362 195.8323 702.7926 c195.9478 702.2029 196.3453 701.8569 196.9608 701.6006 cS189.5903 696.9064 m190.8715 699.9836 192.2808 703.3686 195.5497 704.7156 c197.0111 705.1903 198.4857 704.3959 199.7423 703.5116 c200.2039 703.3194 199.8836 702.5501 199.935 701.8065 c200.0506 701.2168 200.4481 700.8708 201.0636 700.6145 cSUu0 O0.75 0 0 0 k183.4467 695.804 m183.7107 697.124 183.9747 698.708 185.0307 699.5 c185.8227 699.764 186.8787 699.5 187.6707 699.236 c189.7827 698.18 191.6307 697.124 194.0066 697.124 cB183.1827 693.956 m182.9187 694.484 183.1827 695.54 183.4467 695.54 c187.1427 698.444 191.6307 695.54 195.3267 697.124 C195.3267 695.012 195.8547 692.636 193.7427 691.052 cBU1 g1 w135.3333 666 mB1 Ap0.125 0.25 0.25 0 k0.5 w179 642.8538 m188.2744 643.0971 203.0416 661.6396 203.0416 677 c203.0416 689.6104 192.9443 695.4795 179.6667 695.4795 c166.389 695.4795 154.9584 689.3604 154.9584 677 c154.9584 661.6396 169.4724 642.6038 179 642.8538 cb0 Ap1 w172.75 680.9167 m167.1591 676.0701 167.6666 671.4164 166.3333 664.75 C165.5 663.25 170.6667 662.8333 174.8333 664.75 c175.8333 667.0833 173.3333 668 vBu1 Ap1 g0.5 w163.25 675.8572 m165.4955 675.8572 167.3159 676.6487 167.3159 677.625 c167.3159 678.6013 165.4955 679.3928 163.25 679.3928 c161.0045 679.3928 159.1841 678.6013 159.1841 677.625 c159.1841 676.6487 161.0045 675.8572 163.25 675.8572 cb0 g163.7418 676.7487 m164.4374 676.7487 165.0013 677.3126 165.0013 678.0082 c165.0013 678.7038 164.4374 679.2678 163.7418 679.2678 c163.0462 679.2678 162.4822 678.7038 162.4822 678.0082 c162.4822 677.3126 163.0462 676.7487 163.7418 676.7487 cfU0 Ap0 R0 G169.25 660 m173.0901 659.7257 175.8928 660.7169 180 659.25 cSu1 Ap0 O1 g178.125 675.9822 m180.3705 675.9822 182.1909 676.7737 182.1909 677.75 c182.1909 678.7263 180.3705 679.5178 178.125 679.5178 c175.8795 679.5178 174.0591 678.7263 174.0591 677.75 c174.0591 676.7737 175.8795 675.9822 178.125 675.9822 cb0 g178.5 676.8655 m179.1956 676.8655 179.7595 677.4294 179.7595 678.125 c179.7595 678.8206 179.1956 679.3845 178.5 679.3845 c177.8044 679.3845 177.2405 678.8206 177.2405 678.125 c177.2405 677.4294 177.8044 676.8655 178.5 676.8655 cfUu0 Ap0 R0 G164.5833 688.7083 m165.25 690.7083 164.4167 694.0417 168.2083 693.8333 cS163.125 688.2917 m162.5417 690.1667 164.375 692.5 166.4583 693.3333 cS161.4166 687.4583 m161.319 688.8749 163.9727 692.8333 165.2083 692.8333 cS159.7917 686.4583 m160.5556 689.625 161.7778 691.4583 164.2083 692.3333 cS158.2083 685.75 m159.2879 688.6553 163.1289 691.8238 163.2083 691.8333 cSUu178 690.25 m178.6667 692.25 178.8333 698.9167 182.6667 695.6667 cS180.6667 690.4167 m181.3333 692.4167 181.625 698.5833 185.4583 695.5833 cS174.6667 690.0417 m175.8334 691.7086 175.8751 699.5832 179.7083 695.3333 cS183.4167 690.5417 m184.0833 692.5417 185.625 697.9583 188.7083 694.5833 cS185.9167 690.0417 m186.5833 692.0417 188.125 698.3333 190.9583 694.0833 cS171.9167 689.9167 m172.0833 692.0833 173.375 698.3333 176.2083 695.5833 cS189.375 689.9167 m190.0417 691.9167 191.875 697 193.875 692.4167 cS169.2917 689.625 m169.9583 691.625 170.625 697.8333 173.7083 695.0833 cS166.3333 689.125 m166 692.125 167.8958 694.9792 170.7083 694.8333 cS190.875 688.9583 m191.5417 690.9583 194.4167 693.5833 196.625 690.875 cS192.5 688.0833 m192.8865 689.2428 196.6413 691.0766 198.4583 689.375 cS194.1666 686.875 m195.75 689.5417 197.9583 687.9167 200.2917 687.375 cSU203.0417 678.0416 mS196.9583 675.4583 mS203.0417 677.375 mS196.9583 674.7916 mS203.2083 676.875 mS197.125 674.2916 mS203.2083 676.2083 mS197.625 673.625 mS203.2083 675.7083 mS197.7917 673.125 mS203.2083 675.2083 mS197.125 672.625 mS0 O0.75 0 0 0 k0.25 w184.8333 703.5 mB0.5 w156.777 684.6042 mS156.652 675.6667 mSu179.5417 690.3542 m179.2083 693.0208 181.5 697.5208 184.2083 695.3958 cS182.2083 690.3958 m182.375 693.0625 184.7917 696.9375 187 695.3125 cS176.375 690.1458 m177.0417 692.1461 177.4168 699.3124 181.25 695.0625 cS184.5833 690.3958 m184.5833 692.7292 187.9167 697.1875 190.25 694.3125 cS187.0833 689.8958 m188.2599 694.0084 191.9547 695.6305 192.5 693.8125 cS173.4583 689.8958 m174.125 691.8958 174.25 698.7292 177.75 695.3125 cS190.1667 689.2708 m190 691.7708 194.5833 696.2292 195.5833 691.6458 cS170.4583 689.6458 m171.125 691.6458 172.1667 697.5625 175.25 694.8125 cS167.7917 689.3958 m168.4583 691.3958 168.6875 696.0833 172.25 694.5625 cS191.8333 688.8125 m192.5 690.8125 196.7083 691.8125 197.8333 689.9375 cS193.7083 687.9375 m195.4206 689.7402 199.149 688.8707 199.5 688.1042 cS195.0833 685.8542 m196.1667 688.0208 198.9167 686.5625 201.1667 685.7708 cSU188.2917 689.9583 m188.9583 691.9583 191.0417 697.5417 193.0417 692.9583 cSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF